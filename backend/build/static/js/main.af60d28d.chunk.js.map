{"version":3,"sources":["components/MediaType.js","services/memes.js","reducers/memeReducer.js","components/MemeInfo.js","services/tickets.js","components/Info.js","services/users.js","components/Login.js","components/NewPost.js","services/login.js","reducers/notificationReducer.js","reducers/loggedReducer.js","components/User.js","App.js","reducers/userReducer.js","store.js","index.js"],"names":["Media","props","mediaType","meme","media","substr","lastIndexOf","id","controls","src","type","alt","title","baseUrl","token","exportedObject","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","put","setToken","newToken","remove","delete","vote","votedMeme","likes","addComment","comment","initializeMemes","dispatch","memeService","memes","memeReducer","state","action","console","log","memeToChange","find","n","changedMeme","votes","map","MemeInfo","useState","newComment","setNewComment","disable","setDisable","classes","makeStyles","theme","root","width","maxWidth","inline","display","useStyles","useDispatch","window","location","pathname","substring","i","length","comments","event","preventDefault","alert","commentObject","content","returnedMeme","reload","Button","disabled","variant","color","onClick","addVote","to","user","username","List","className","ListItem","alignItems","ListItemAvatar","Avatar","avatar","ListItemText","primary","secondary","Typography","component","date","Divider","onSubmit","TextField","label","value","name","onChange","target","postTicket","Info","ticketType","setTicketType","ticketContent","setTicketContent","sendTicket","ticketObject","ticketService","returnedTicket","style","marginBottom","marginTop","htmlFor","selectedValue","document","getElementById","rows","cols","updateAvatar","newAvatar","updatedUser","updateAvatarByFile","newAvatarFile","catch","err","newUser","modalStyles","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","createTheme","RegisterModal","classesModal","React","top","left","transform","modalStyle","open","setOpen","handleClose","Link","href","sx","mt","mb","Modal","onClose","registerUser","newUsername","setNewUsername","newPassword","setNewPassword","Login","Error","message","registeringUser","password","userService","returnedUser","setUsername","setPassword","setNotification","error","setErrorMessage","setTimeout","body","ThemeProvider","Container","CssBaseline","Box","bgcolor","flexDirection","m","handleLogin","noValidate","errorMessage","Notification","noteMessage","margin","required","autoComplete","autoFocus","NewPost","addMeme","newTitle","setNewTitle","newMedia","setNewMedia","login","credentials","duration","notificationReducer","logIn","loggedReducer","User","users","logged","useParams","theseMemes","j","push","getLikes","getComments","getRank","SimpleModal","setNewAvatar","file","useEffect","setAvatarByURL","method","enctype","accept","multiple","height","Math","abs","joined","IconButton","confirm","ConfirmMemeDelete","size","fontSize","Menu","useSelector","thisUser","AppBar","Toolbar","justifyContent","marginRight","marginLeft","xs","md","handleLogout","App","filter","setFilter","setUser","notification","sort","b","loggedUserJSON","localStorage","getItem","JSON","parse","main","orange","green","loginService","setItem","stringify","removeItem","memeObject","loggedIn","Alert","severity","flexWrap","overflow","imageList","icon","handleFilter","clearSearch","QuickSearchToolbar","placeholder","textField","InputProps","startAdornment","endAdornment","compareByLikes","parseDate","input","parts","match","Date","compareByDate","date1","date2","getTime","TopRatedMemeList","ImageList","ImageListItem","ImageListItemBar","subtitle","actionIcon","MostRecentMemeList","rowHeight","path","TableContainer","Paper","Table","TableBody","includes","TableRow","TableCell","userReducer","combinedReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","getState","ReactDOM","render"],"mappings":"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","file":"static/js/main.af60d28d.chunk.js","sourcesContent":["import '../index.css'\n\nconst Media = (props) => {\n\n  var mediaType = props.meme.media.substr(props.meme.media.lastIndexOf('.') + 1)\n\n  if ( mediaType === 'mp4' || mediaType === 'webm' ) {\n    return (\n      <video id={props.id} controls>\n        <source src={props.meme.media} type='video/mp4' />\n      </video> )\n  } else return ( <img id={props.id} src={props.meme.media} alt={props.meme.title} /> )\n}\n\nexport default Media","import axios from 'axios'\nconst baseUrl = '/api/memes'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`/api/memes/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.delete(`/api/memes/${id}`,config)\n  return request.then(response => response.data)\n}\n\nconst vote = async (meme) => {\n  const votedMeme = {\n    ...meme,\n    likes: meme.likes + 1\n  }\n  const response = await axios.put(`${baseUrl}/${meme.id}`, votedMeme)\n  return response.data\n}\n\nconst addComment = async (meme, comment) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(`${baseUrl}/${meme.id}/comments`, comment, config)\n  return response.data\n}\n\nconst exportedObject = {\n  getAll,\n  create,\n  update,\n  setToken,\n  remove,\n  vote,\n  addComment\n}\n\nexport default exportedObject","/* eslint-disable no-case-declarations */\nimport memeService from '../services/memes'\n\nconst memeReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_MEME':\n    console.log('action.data: ' , action.data)\n    return [...state, action.data]\n  case 'INIT_MEMES':\n    return action.data\n  case 'VOTE':\n    const id = action.data.id\n    const memeToChange = state.find(n => n.id === id)\n    const changedMeme = {\n      ...memeToChange,\n      votes: memeToChange.votes + 1\n    }\n    return state.map(meme =>\n      meme.id !== id ? meme : changedMeme\n    )\n  case 'COMMENT':\n    console.log('action.data: ' , action.data)\n    return [...state, action.data]\n  default:\n    return state\n  }\n}\nexport const addVote = (id,meme) => {\n  return async dispatch => {\n    await memeService.vote(meme)\n    dispatch({\n      type: 'VOTE',\n      data: { id }\n    })\n  }\n}\n\nexport const addComment = (meme,comment) => {\n  return async dispatch => {\n    const newComment = await memeService.addComment(meme, comment)\n    dispatch({\n      type: 'COMMENT',\n      data: newComment\n    })\n  }\n}\n\nexport const createMeme = content => {\n  return async dispatch => {\n    const newMeme = await memeService.create(content)\n    dispatch({\n      type: 'NEW_MEME',\n      data: newMeme\n    })\n  }\n}\n\nexport const initializeMemes = () => {\n  return async dispatch => {\n    const memes = await memeService.getAll()\n    dispatch({\n      type: 'INIT_MEMES',\n      data: memes,\n    })\n  }\n}\n\nexport default memeReducer","import { React, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Media from './MediaType'\nimport { addVote } from '../reducers/memeReducer'\nimport { TextField, Button } from '@material-ui/core'\nimport memeService from '../services/memes'\nimport { makeStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Divider from '@material-ui/core/Divider'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\n\nconst MemeInfo = ({ memes }) => {\n\n  const [newComment, setNewComment] = useState('')\n  const [disable, setDisable] = useState(false)\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: '36ch',\n    },\n    inline: {\n      display: 'inline',\n    },\n  }))\n\n  const classes = useStyles()\n\n  const dispatch = useDispatch()\n  const id = window.location.pathname.substring(window.location.pathname.lastIndexOf('/') + 1)\n  let meme = memes[0]\n\n  for (var i = 0;i < memes.length;i++)\n  {\n    if (id === memes[i].id) {\n      meme = memes[i]\n      break\n    }\n  }\n\n  if (!meme) {\n    return null\n  }\n\n  const comments = meme.comments\n\n  const addComment = async (event) => {\n    event.preventDefault()\n\n    if (newComment === '') {\n      window.alert('Text required')\n      return null\n    }\n    const commentObject = {\n      content: newComment\n    }\n\n    memeService\n      .addComment(meme,commentObject)\n      .then(returnedMeme => {\n        setNewComment('')\n      })\n    window.location.reload()\n  }\n\n  return (\n    <div>\n      <h1>{meme.title}</h1>\n      <Media meme={meme} />\n      <p>{meme.likes} likes <Button disabled={disable} variant=\"contained\" color=\"primary\" onClick={() => {\n        setDisable(true)\n        dispatch(addVote(meme.id,meme))\n      }}>like</Button></p>\n      <p>added by  <Link to={`../users/${meme.user.id}`}>{meme.user.username}</Link></p>\n      <h2>Comments</h2>\n      <List className={classes.root}>\n        {comments.map(comment =>\n          <div key={comment.content}>\n            <ListItem alignItems=\"flex-start\">\n              <ListItemAvatar>\n                <Avatar src={comment.avatar} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={comment.content}\n                secondary={<Typography\n                  component=\"span\"\n                  variant=\"body2\"\n                  className={classes.inline}\n                  color=\"textPrimary\"\n                >\n                  {comment.user}, {comment.date}\n                </Typography>} />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n          </div>\n        )}\n      </List>\n      <div>\n        <form onSubmit={addComment}>\n          <div>\n            <TextField label=\"Comment\"\n              id='commentField'\n              type=\"text\"\n              value={newComment}\n              name=\"Comment\"\n              onChange={({ target }) => setNewComment(target.value)}\n            />\n          </div>\n          <Button variant=\"contained\" color=\"primary\" id='submitMeme-button' type=\"submit\">Add a comment</Button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\n\nexport default MemeInfo","import axios from 'axios'\nconst baseUrl = '/api/tickets'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst postTicket = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst exportedObject = {\n  setToken,\n  postTicket\n}\n\nexport default exportedObject","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react'\nimport ControlPointIcon from '@material-ui/icons/ControlPoint'\nimport CommentIcon from '@material-ui/icons/Comment'\nimport ImageIcon from '@material-ui/icons/Image'\nimport PeopleIcon from '@material-ui/icons/People'\nimport StarsIcon from '@material-ui/icons/Stars'\nimport WatchLaterIcon from '@material-ui/icons/WatchLater'\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos'\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport ExitToApp from '@material-ui/icons/ExitToApp'\nimport Button from '@material-ui/core/Button'\nimport ticketService from '../services/tickets'\nimport '../index.css'\n\nconst Info = () => {\n\n  const [ticketType, setTicketType] = useState('suggestion')\n  const [ticketContent, setTicketContent] = useState('')\n\n  const sendTicket = async (event) => {\n    event.preventDefault()\n\n    if (ticketContent.length < 10) {\n      window.alert('The text is too short.')\n      return null\n    }\n\n    const ticketObject = {\n      content: ticketContent,\n      type: ticketType\n    }\n\n    console.log('ticketObject: ' , ticketObject)\n\n    ticketService\n      .postTicket(ticketObject)\n      .then(returnedTicket => {\n        setTicketType('')\n        setTicketContent('')\n        window.alert('Your ticket has been submitted.')\n      })\n\n    window.location.reload()\n  }\n\n  function setType()\n  {\n    var selectedValue = document.getElementById('types').value\n    setTicketType(selectedValue)\n  }\n\n  function setContent()\n  {\n    var selectedValue = document.getElementById('ticketContent').value\n    setTicketContent(selectedValue)\n  }\n\n  return (\n    <div>\n      <div>\n        <h1>INFO</h1>\n      </div>\n      <div id='infoBar'>\n        <h2>Pages</h2>\n        <b>TOP <StarsIcon />:</b>\n        <p>Shows the memes starting from the most liked in a descending order. <br />You can access the comment section of the meme by clicking its title.</p>\n        <b>FRESH <WatchLaterIcon />:</b>\n        <p>Shows the memes starting from the most recently added in a descending order. <br />You can access the comment section of the meme by clicking its title.</p>\n        <b>NEW POST <AddToPhotosIcon />:</b>\n        <p>Add a new post to the site based on a URL-link and Title you've submitted in the field.</p>\n        <b>USERS <PeopleIcon />:</b>\n        <p>Shows the list of users and their data. The users are listed starting from the one with most activity points in a descending order. <br />\n        You can view the user's profile page by clicking the name on the list. The profile shows you the user's rank, <br />\n        the memes the person has added. By clicking the link in the title on that list you can access the page of the meme.</p>\n        <b>MY PROFILE <AccountCircleIcon />:</b>\n        <p>Leads to your own profile page. You can change your avatar on this page.</p>\n        <b>LOGOUT <ExitToApp />:</b>\n        <p>Logs you off. By logging off you will have to submit credentials in order to view the site with an account on the next time you enter MemeDump. <br />\n        If you exit the site without logging off your user token will be remembered and you will automatically be logged in as the current user <br />\n        the next time you enter the site.</p>\n      </div>\n      <div id='infoBar'>\n        <h2>Activity Points <ControlPointIcon /></h2>\n        <p>Activity points define the ranking of a user. <br />These points are earned by following activities: </p>\n        <p><ImageIcon /> Posting a meme: <b>+3 points</b></p>\n        <p><CommentIcon /> Posting a comment: <b>+1 points</b></p>\n        <p><ThumbUpIcon /> Receiving a like from a meme: <b>+1 points</b></p>\n      </div>\n      <div id='infoBar'>\n        <h2>Send a ticket</h2>\n        <p>In a need to contact the administration? That can be done by sending a ticket here.<br />\n         Select a type from 'Suggestion', 'Bug Report' or 'Other issue' and write a description.</p>\n        <form onSubmit={sendTicket}>\n          <div style={{ marginBottom: 30, marginTop: 20 }}>\n            <label htmlFor=\"types\">Choose a type for your ticket: </label>\n            <select name=\"types\" id=\"types\" onChange={setType}>\n              <option value=\"Suggestion\">Suggestion</option>\n              <option value=\"Bug Report\">Bug Report</option>\n              <option value=\"Other Issue\">Other Issue</option>\n            </select>\n          </div>\n          <div>\n            <p>Describe your issue below: </p>\n            <textarea rows=\"4\" cols=\"50\" name=\"ticketContent\" type=\"text\" id=\"ticketContent\" onChange={setContent}/>\n          </div>\n          <div>\n            <Button variant=\"contained\" color=\"primary\" id='submitTicket-button' type=\"submit\">Submit</Button>\n          </div>\n        </form>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Info","/* eslint-disable no-unused-vars */\nimport axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst updateAvatar = (user, newAvatar) => {\n\n  const updatedUser = {\n    ...user,\n    avatar: newAvatar\n  }\n  const request = axios.put(`/api/users/${user.id}`, updatedUser)\n  return request.then(response => response.data)\n}\n\nconst updateAvatarByFile = (user, newAvatarFile) => {\n  console.log('newavatarfile: ' , newAvatarFile)\n\n  const request = axios.post('/api/upload', newAvatarFile).then(response => console.log(response)).catch(err => console.log())\n  /**\n  return request.then(response => response.data)\n\n  const updatedUser = {\n    ...user,\n    avatar: newAvatarFile\n  }\n  const request2 = axios.put(`/api/users/${user.id}`, updatedUser)\n  return request2.then(response => response.data)\n  */\n}\n\nconst newUser = (user) => {\n  const request = axios.post('/api/users', user)\n  return request.then(response => response.data)\n}\n\nconst exportedObject = {\n  getAll,\n  updateAvatar,\n  updateAvatarByFile,\n  newUser\n}\n\nexport default exportedObject","import userService from '../services/users'\nimport React, { useState } from 'react'\nimport Modal from '@material-ui/core/Modal'\nimport { TextField, Button, makeStyles, Container } from '@material-ui/core'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport Box from '@mui/material/Box'\nimport Avatar from '@mui/material/Avatar'\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied'\nimport Typography from '@mui/material/Typography'\nimport Link from '@mui/material/Link'\nimport '../index.css'\n\nconst modalStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}))\n\nconst theme = createTheme()\n\nconst Login = (props) => {\n\n  const [newUsername, setNewUsername] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n\n  const Error = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  const registerUser = async (event) => {\n    event.preventDefault()\n\n    if (newUsername.length < 3 || newPassword.length < 4 ) {\n      window.alert('Cannot register a user with given details. The username must be longer than 2 letters and password longer than 3 letters.')\n      return null\n    }\n\n    let registeringUser = {\n      username: newUsername,\n      password: newPassword,\n      avatar: 'https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?b=1&k=20&m=1223671392&s=612x612&w=0&h=NlD1eNScGYsHBFjAzWrR0JzwkTOvtddTsq-9v5-LryQ='\n    }\n\n    try {\n      userService\n        .newUser(registeringUser)\n        .then(returnedUser => {\n          props.setUsername('')\n          props.setPassword('')\n          props.dispatch(props.setNotification(`Succesfully registered a new user with username: '${props.user.username}'`,5))\n        })\n    } catch(error) {\n      props.setErrorMessage('An error occured. Make sure that your username and password have at least 3 letters and that your username is unique.')\n      setTimeout(() => {\n        props.setErrorMessage(null)\n      }, 3000)\n      console.log(\n        'An error occurred'\n      )\n    }\n    window.location.reload()\n  }\n\n  document.body.style.backgroundColor = 'orange'\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container >\n        <CssBaseline />\n        <Box\n          sx={{\n            bgcolor: 'white',\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <SentimentVerySatisfiedIcon />\n          </Avatar>\n          <Typography id=\"title\" component=\"h1\" variant=\"h5\">\n            MemeDump\n          </Typography>\n          <div>\n            <h2>Login</h2>\n\n            <Box component=\"form\" onSubmit={props.handleLogin} noValidate sx={{ mt: 1 }}>\n              <Error message={props.errorMessage} />\n              <props.Notification message={props.noteMessage} />\n              <div>\n                <TextField label=\"username\"\n                  margin=\"normal\"\n                  required\n                  autoComplete=\"username\"\n                  autoFocus\n                  id='username'\n                  type=\"text\"\n                  value={props.username}\n                  name=\"Username\"\n                  onChange={({ target }) => props.setUsername(target.value)}\n                />\n              </div>\n              <div>\n                <TextField label=\"password\"\n                  margin=\"normal\"\n                  required\n                  autoComplete=\"current-password\"\n                  id='password'\n                  type=\"password\"\n                  value={props.password}\n                  name=\"Password\"\n                  onChange={({ target }) => props.setPassword(target.value)}\n                />\n              </div>\n              <Button\n                sx={{ mt: 3, mb: 2 }}\n                variant=\"contained\"\n                color=\"primary\"\n                id='login-button'\n                type=\"submit\"\n              >Login</Button>\n              <RegisterModal registerUser={registerUser} newUsername={newUsername} setNewUsername={setNewUsername} newPassword={newPassword} setNewPassword={setNewPassword}/>\n            </Box>\n          </div>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  )\n}\n\n\nconst RegisterModal = (props) => {\n\n  function getModalStyle() {\n    const top = 50\n    const left = 50\n\n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    }\n  }\n\n  const classesModal = modalStyles()\n  const [modalStyle] = React.useState(getModalStyle)\n  const [open, setOpen] = React.useState(false)\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div>\n      <Link href=\"#\" variant=\"body2\" sx={{ mt: 3, mb: 2 }} onClick={handleOpen}>{'Don\\'t have an account? Sign Up'}</Link>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div style={modalStyle} className={classesModal.paper}>\n          <form onSubmit={props.registerUser}>\n            <h2 id=\"simple-modal-title\">Create a new account</h2>\n            <div>\n              <TextField label=\"Username\"\n                id='usernameField'\n                type=\"text\"\n                value={props.newUsername}\n                name=\"Title\"\n                onChange={({ target }) => props.setNewUsername(target.value)}\n              />\n            </div>\n            <div>\n              <TextField label=\"Password\"\n                id='passwordField'\n                type=\"text\"\n                value={props.newPassword}\n                name=\"Title\"\n                onChange={({ target }) => props.setNewPassword(target.value)}\n              />\n            </div>\n            <div>\n              <Button variant=\"contained\" color=\"primary\" id='submitUser-button' type=\"submit\">Submit</Button>\n              <Button variant=\"contained\" color=\"primary\" id='submitUser-button' onClick={handleClose}>Close</Button>\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Login","import { TextField , Button } from '@material-ui/core'\n\nconst NewPost = (props) => {\n\n  return (\n    <div>\n      <h2>Make a post</h2>\n      <form onSubmit={props.addMeme}>\n        <div>\n          <TextField label=\"Title\"\n            id='titleField'\n            type=\"text\"\n            value={props.newTitle}\n            name=\"Title\"\n            onChange={({ target }) => props.setNewTitle(target.value)}\n          />\n        </div>\n        <div>\n          <TextField label =\"Image link (URL)\"\n            id='urlField'\n            type=\"text\"\n            value={props.newMedia}\n            name=\"Url\"\n            onChange={({ target }) => props.setNewMedia(target.value)}\n          />\n        </div>\n        <Button variant=\"contained\" color=\"primary\" id='submitMeme-button' type=\"submit\">create</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewPost","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst exportedObject = {\n  login\n}\n\nexport default exportedObject","\nconst notificationReducer = (state = '', action) => {\n  console.log('action: ' , action)\n  switch (action.type) {\n  case 'CREATED':\n    state = `${action.data.content}`\n    return state\n  case 'ZERO':\n    state = ''\n    return state\n  default:\n    return state\n  }\n}\n\nexport const setNotification = (content,duration) => {\n  console.log('content: ' , content)\n  return async dispatch => {\n    dispatch({\n      type: 'CREATED',\n      data: { content }\n    })\n    setTimeout(() => {\n      dispatch({\n        type: 'ZERO'\n      })\n    }, duration*1000)\n  }\n}\n\nexport default notificationReducer","\nconst loggedReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    state = action.data\n    return state\n  case 'LOGOUT':\n    state = null\n    return state\n  default:\n    return state\n  }\n}\n\nexport const logIn = (user) => {\n  return async dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data: user,\n    })\n  }\n}\n\nexport const logOut = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport default loggedReducer","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react'\nimport { useParams,Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport Modal from '@material-ui/core/Modal'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\nimport userService from '../services/users'\nimport memeService from '../services/memes'\nimport Media from './MediaType'\nimport CommentIcon from '@material-ui/icons/Comment'\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp'\nimport Divider from '@mui/material/Divider'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\nimport IconButton from '@material-ui/core/IconButton'\n\nconst modalStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}))\n\nconst User = ({ users, memes, logged }) => {\n\n  console.log('logged: ' , logged)\n\n  if (users.length < 1) {\n    return null\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const id = useParams().id\n  let user = users[0]\n  let theseMemes = []\n\n  for (var i = 0;i < users.length;i++)\n  {\n    if (id === users[i].id) {\n      user = users[i]\n      break\n    }\n  }\n\n  for (var j = 0;j < memes.length;j++)\n  {\n    if (id === memes[j].user.id) {\n      theseMemes.push(memes[j])\n    }\n  }\n\n  function getLikes( user ) {\n\n    var likes = 0\n\n    for (var i = 0; i < memes.length; i++) {\n      if (memes[i].user.id === user.id) likes = likes + memes[i].likes\n    }\n    return likes\n  }\n\n  function getComments( user ) {\n\n    var comments = 0\n\n    for (var i = 0; i < memes.length; i++) {\n      for (var j = 0; j < memes[i].comments.length; j++) {\n        if (memes[i].comments[j].user === user.username) comments++\n      }\n    }\n    return comments\n  }\n\n  function getRank( user ) {\n\n    for (var i = 0; i < users.length; i++) {\n      if (users[i] === user) return i+1\n    }\n    return users.length-1\n  }\n\n  // =================================  Modal Build =================================\n\n  function SimpleModal() {\n\n    function getModalStyle() {\n      const top = 50\n      const left = 50\n\n      return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n      }\n    }\n\n    const classesModal = modalStyles()\n    const [modalStyle] = React.useState(getModalStyle)\n    const [open, setOpen] = React.useState(false)\n    const [newAvatar, setNewAvatar] = useState('')\n    const [file, setFile] = useState()\n    useEffect( () => { console.log(file) }, [file])\n\n    const handleOpen = () => {\n      setOpen(true)\n    }\n\n    const handleClose = () => {\n      setOpen(false)\n    }\n\n    const setAvatarByURL = async (event) => {\n      event.preventDefault()\n\n      if (newAvatar.length < 12) {\n        window.alert('The URL doesnt seem valid.')\n        return null\n      }\n\n      userService\n        .updateAvatar(user, newAvatar)\n        .then(returnedMeme => {\n        })\n        .catch(() => {\n          console.log(\n            'An error occurred'\n          )\n        })\n      window.location.reload()\n    }\n\n    const setAvatarByFile = async (event) => {\n      const data = new FormData()\n      data.append('name','name')\n      data.append('file', file)\n      userService.updateAvatarByFile(user, data)\n    }\n\n    return (\n      <div>\n        <Button color=\"primary\" variant=\"contained\" onClick={handleOpen}>Change Avatar</Button>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div style={modalStyle} className={classesModal.paper}>\n            <form onSubmit={setAvatarByURL}>\n              <h2 id=\"simple-modal-title\">Submit a new avatar with a link to the image's URL</h2>\n              <div>\n                <TextField label=\"Avatar\"\n                  id='avatarField'\n                  type=\"text\"\n                  value={newAvatar}\n                  name=\"Title\"\n                  onChange={({ target }) => setNewAvatar(target.value)}\n                />\n              </div>\n              <div>\n                <Button variant=\"contained\" color=\"primary\" id='submitAvatar-button' type=\"submit\">Submit</Button>\n              </div>\n            </form>\n            <h2 id=\"simple-modal-title\">..Or upload a jpg file</h2>\n            <form action=\"http://localhost:3003/api/upload\" method=\"post\" enctype=\"multipart/form-data\">\n              <div className=\"flex\">\n                <label htmlFor=\"file\">File</label>\n                <input\n                  name=\"avatar\"\n                  type=\"file\"\n                  id=\"file\"\n                  accept=\".jpg\"\n                  multiple\n                />\n              </div>\n              <div>\n                <Button variant=\"contained\" color=\"primary\" id='submitAvatar-button' type=\"submit\">Submit</Button>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n\n  // =================================================================================================\n\n  if (logged.username === user.username) return (\n    <div>\n      <div>\n        <img alt=\"null\" src={user.avatar} width=\"300\" height=\"300\"/>\n      </div>\n      <SimpleModal />\n      <h1>{user.username}</h1>\n      <p>Activity points: {Math.abs(user.memes.length * 3) + getLikes(user) + getComments(user)}, <b>Rank: #{getRank(user)}</b></p>\n      <p>Joined in {user.joined}</p>\n      <h2>Added memes</h2>\n      {theseMemes.map(meme =>\n        <div key={meme.id}><p><Link to={`../memes/${meme.id}`}>{meme.title}</Link>\n          <IconButton onClick={() => ConfirmMemeDelete(meme.id)} aria-label=\"delete\" size=\"medium\">\n            <DeleteForeverIcon fontSize=\"inherit\" />\n          </IconButton></p>\n        <Media meme={meme} id='userPageMedia'/>\n        <p>{meme.likes} <ThumbUpIcon />    {meme.comments.length} <CommentIcon /></p>\n        <Divider /></div>\n      )}\n    </div>\n  )\n\n  if (user) return (\n    <div>\n      <img alt=\"null\" src={user.avatar} width=\"300\" height=\"300\"/>\n      <h1>{user.username}</h1>\n      <p>Activity points: {Math.abs(user.memes.length * 3) + getLikes(user) + getComments(user)}, <b>Rank: #{getRank(user)}</b></p>\n      <p>Joined in {user.joined}</p>\n      <h2>Added memes</h2>\n      {theseMemes.map(meme =>\n        <div key={meme.id}><p><Link to={`../memes/${meme.id}`}>{meme.title}</Link></p>\n          <Media meme={meme} id='userPageMedia'/>\n          <p>{meme.likes} <ThumbUpIcon />    {meme.comments.length} <CommentIcon /></p>\n          <Divider /></div>\n      )}\n    </div>\n  )\n}\n\nfunction ConfirmMemeDelete(id)\n{\n  // eslint-disable-next-line no-restricted-globals\n  var confirmation = confirm('Are you sure you want to delete this post?')\n  if (confirmation) {\n    memeService.remove(id)\n    window.location.reload()\n    return true\n  } else\n    return false\n}\n\n\nexport default User","import React, { useState, useEffect } from 'react'\nimport MemeInfo from './components/MemeInfo'\nimport Info from './components/Info'\nimport Login from './components/Login'\nimport Media from './components/MediaType'\nimport NewPost from './components/NewPost'\nimport memeService from './services/memes'\nimport ticketService from './services/tickets'\nimport loginService from './services/login'\nimport './index.css'\nimport { setNotification } from './reducers/notificationReducer'\nimport { logIn, logOut } from './reducers/loggedReducer'\nimport { initializeMemes } from './reducers/memeReducer'\nimport { useSelector, useDispatch } from 'react-redux'\nimport User from './components/User'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link } from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\nimport { TableContainer, Table, TableCell, TableRow, TableBody, Paper, TextField, Button, AppBar, Toolbar, IconButton, makeStyles, ImageListItem, ImageList, ImageListItemBar, Avatar, createTheme, ThemeProvider } from '@material-ui/core'\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp'\nimport { Alert } from '@material-ui/lab'\nimport { green, orange } from '@material-ui/core/colors'\nimport Box from '@mui/material/Box'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport ExitToApp from '@material-ui/icons/ExitToApp'\nimport StarsIcon from '@material-ui/icons/Stars'\nimport WatchLaterIcon from '@material-ui/icons/WatchLater'\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos'\nimport PeopleIcon from '@material-ui/icons/People'\nimport ImageIcon from '@material-ui/icons/Image'\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday'\nimport CommentIcon from '@material-ui/icons/Comment'\nimport ControlPointIcon from '@material-ui/icons/ControlPoint'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport InfoIcon from '@material-ui/icons/Info'\n\nconst Menu = (props) => {\n  const users = useSelector(state => state.users)\n  const username = props.logged.username\n  let thisUser = {\n    username: '0'\n  }\n\n  for (var i = 0;i < users.length;i++)\n  {\n    if (username === users[i].username) {\n      thisUser = users[i]\n      break\n    }\n  }\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar style={{ display:'flex', justifyContent:'space-between' }}>\n        <div></div>\n        <div >\n          <Button style={{ marginRight: 10, marginLeft: 100 }} variant=\"contained\" color=\"inherit\" component={Link} to=\"/top\">\n            <b>Top</b><StarsIcon style={{ marginLeft: 10 }}/>\n          </Button>\n          <Button style={{ margin: 10 }} variant=\"contained\" color=\"inherit\" component={Link} to=\"/fresh\">\n            <b>Fresh</b><WatchLaterIcon style={{ marginLeft: 10 }}/>\n          </Button>\n          <Button style={{ margin: 10 }} variant=\"contained\" color=\"inherit\" component={Link} to=\"/newpost\">\n            <b>New post</b><AddToPhotosIcon style={{ marginLeft: 10 }}/>\n          </Button>\n          <Button style={{ margin: 10 }} variant=\"contained\" color=\"inherit\" component={Link} to=\"/users\">\n            <b>Users</b><PeopleIcon style={{ marginLeft: 10 }}/>\n          </Button>\n          <Button style={{ margin: 10 }} variant=\"contained\" color=\"inherit\" component={Link} to={`/users/${thisUser.id}`}>\n            <b>My Profile</b><AccountCircleIcon style={{ marginLeft: 10 }}/>\n          </Button>\n        </div>\n        <div>\n          <Button color=\"inherit\" component={Link} to=\"/info\">\n          Info & Support <InfoIcon style={{ marginLeft: 10 }}/>\n          </Button>\n          <Button color=\"inherit\" sx={{ display: { xs: 'none', md: 'flex' } }} onClick={props.handleLogout}>Logout <ExitToApp style={{ marginLeft: 10 }}/></Button>\n        </div>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nconst App = () => {\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newMedia, setNewMedia] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const dispatch = useDispatch()\n  const noteMessage = useSelector(state => state.notification)\n  const users = useSelector(state => state.users)\n  const memes = useSelector(state => state.memes)\n  users.sort( compareByPoints )\n\n\n  useEffect(() => {\n    dispatch(initializeMemes())\n  }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedMemeAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      dispatch(logIn(user))\n      memeService.setToken(user.token)\n      ticketService.setToken(user.token)\n    }\n  },[dispatch])\n\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: orange[500],\n      },\n      secondary: {\n        main: green[500],\n      },\n    },\n  })\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedMemeAppUser', JSON.stringify(user)\n      )\n      memeService.setToken(user.token)\n      dispatch(logIn(user))\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      dispatch(setNotification(`Welcome '${user.username}'`,5))\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n    }\n\n  }\n\n  const handleLogout = async () => {\n    window.localStorage.removeItem('loggedMemeAppUser')\n    dispatch(logOut())\n    window.location.href = '/'\n  }\n\n  const addMeme = async (event) => {\n    event.preventDefault()\n\n    if (newTitle === '' || newMedia.length < 5) {\n      window.alert('Title or URL missing or not valid.')\n      return null\n    }\n\n    const memeObject = {\n      title: newTitle,\n      media: newMedia,\n    }\n\n    memeService\n      .create(memeObject)\n      .then(returnedMeme => {\n        dispatch(setNotification(`A new meme '${newTitle}' added`,5))\n        setNewTitle('')\n      })\n      .catch(() => {\n        setErrorMessage(\n          'An error occurred'\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n      })\n  }\n\n  const logged = useSelector(state => state.loggedIn)\n\n  const Notification = ({ message }) => {\n    if (message === '') {\n      return null\n    }\n\n    return (\n      <div>\n        {(message &&\n<Alert severity=\"success\">\n  {message}\n</Alert>\n        )}\n      </div>\n    )\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    imageList: {\n      width: 600,\n      height: 900,\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)',\n    },\n  }))\n\n  const classes = useStyles()\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n    console.log('Filter: ' , filter)\n  }\n\n  const clearSearch = () => {\n    setFilter('')\n    console.log('Filter: ' , filter)\n  }\n\n  function QuickSearchToolbar() {\n    return (\n      <div className={classes.root}>\n        <TextField\n          variant=\"standard\"\n          value={filter}\n          onChange={handleFilter}\n          placeholder=\"Search…\"\n          className={classes.textField}\n          InputProps={{\n            startAdornment: <SearchIcon fontSize=\"small\" />,\n            endAdornment: (\n              <IconButton\n                title=\"Clear\"\n                aria-label=\"Clear\"\n                size=\"small\"\n                onClick={clearSearch}\n              >\n                <ClearIcon fontSize=\"small\" />\n              </IconButton>\n            ),\n          }}\n        />\n      </div>\n    )\n  }\n\n  function getLikes( user ) {\n\n    var likes = 0\n\n    for (var i = 0; i < memes.length; i++) {\n      if (memes[i].user.id === user.id) likes = likes + memes[i].likes\n    }\n    return likes\n  }\n\n  function getComments( user ) {\n\n    var comments = 0\n\n    for (var i = 0; i < memes.length; i++) {\n      for (var j = 0; j < memes[i].comments.length; j++) {\n        if (memes[i].comments[j].user === user.username) comments++\n      }\n    }\n    return comments\n  }\n\n  function compareByLikes( a, b ) {\n    if ( a.likes > b.likes ){\n      return -1\n    }\n    if ( a.likes < b.likes ){\n      return 1\n    }\n    return 0\n  }\n\n  function compareByPoints( a, b ) {\n    if ( Math.abs(a.memes.length * 3) + getLikes(a) + getComments(a) > Math.abs(b.memes.length * 3) + getLikes(b) + getComments(b) ){\n      return -1\n    }\n    if ( Math.abs(a.memes.length * 3) + getLikes(a) + getComments(a) < Math.abs(b.memes.length * 3) + getLikes(b) + getComments(b) ){\n      return 1\n    }\n    return 0\n  }\n\n  // parse a date in yyyy-mm-dd format\n  function parseDate(input) {\n    var parts = input.match(/(\\d+)/g)\n\n    return new Date(parts[0], parts[1]-1, parts[2])\n  }\n\n  function compareByDate( a, b ) {\n    var date1 = parseDate(a.date)\n    var date2 = parseDate(b.date)\n\n    if ( date1.getTime() > date2.getTime() ){\n      return -1\n    }\n    if ( date1.getTime() < date2.getTime() ){\n      return 1\n    }\n    return 0\n  }\n\n  const TopRatedMemeList = () => {\n\n    memes.sort( compareByLikes )\n\n    return (\n      <ImageList className={classes.imageList}>\n        {memes.map(meme =>\n          <ImageListItem key={meme.id} cols={2} style={{ height: 'auto' }}>\n            <Media meme={meme} id='mainPageMedia'/>\n            <ImageListItemBar\n              title={<span><Link to={`../memes/${meme.id}`}>{meme.title}</Link></span>}\n              subtitle={<span>by {meme.user.username} on {meme.date}</span>}\n              actionIcon={\n                <IconButton aria-label={'Like'} href={`../memes/${meme.id}`} className={classes.icon}>\n                  <ThumbUpIcon />\n                  <span> {meme.likes} likes </span>\n                </IconButton>\n              }\n            />\n          </ImageListItem>\n        )}\n      </ImageList>\n    )\n  }\n\n  const MostRecentMemeList = () => {\n\n    memes.sort( compareByDate )\n\n    return (\n      <ImageList rowHeight={180} className={classes.imageList}>\n        {memes.map(meme =>\n          <ImageListItem key={meme.id} cols={2} style={{ height: 'auto' }}>\n            <Media meme={meme} id='mainPageMedia'/>\n            <ImageListItemBar\n              title={<span><Link to={`../memes/${meme.id}`}>{meme.title}</Link></span>}\n              subtitle={<span>by {meme.user.username} on {meme.date}</span>}\n              actionIcon={\n                <IconButton aria-label={'Like'} href={`../memes/${meme.id}`}className={classes.icon}>\n                  <ThumbUpIcon />\n                  <span> {meme.likes} likes </span>\n                </IconButton>\n              }\n            />\n          </ImageListItem>\n        )}\n      </ImageList>\n    )\n  }\n\n  if (user === null) {\n    return (\n      <Login dispatch={dispatch} username={username} setUsername={setUsername} password={password} setPassword={setPassword} errorMessage={errorMessage} handleLogin={handleLogin}\n        setErrorMessage={setErrorMessage} setNotification={setNotification} noteMessage={noteMessage} Notification={Notification} user={user}/>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <Router>\n          <div id='title'>\n            <h1>MemeDump</h1>\n          </div>\n          <div id='loggedInfo' >\n            <p>Logged in as: {user.username}</p>\n          </div>\n\n          <Notification message={noteMessage} />\n\n          <Box sx={{\n            bgcolor: 'white',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}>\n            <Menu handleLogout={handleLogout} logged={logged}/>\n            <Switch>\n              <Route path=\"/memes/:id\">\n                <MemeInfo memes={memes} />\n              </Route>\n              <Route path=\"/top\">\n                <TopRatedMemeList />\n              </Route>\n              <Route path=\"/fresh\">\n                <MostRecentMemeList />\n              </Route>\n              <Route path=\"/info\">\n                <Info />\n              </Route>\n              <Route path=\"/newpost\"><NewPost addMeme={addMeme} newTitle={newTitle} setNewTitle={setNewTitle} newMedia={newMedia} setNewMedia={setNewMedia}></NewPost></Route>\n\n              <Route path=\"/users/:id\">\n                <User users={users} memes={memes} logged={logged}/>\n              </Route>\n\n              <Route path=\"/users\">\n                <div id='searchBar'>\n                  <QuickSearchToolbar />\n                </div>\n                <TableContainer component={Paper}>\n                  <Table>\n                    <TableBody>\n                      {users.map(user => (\n                        user.username.includes(filter)\n                          ? (\n                            <TableRow key={user.id}>\n                              <TableCell>\n                                <span><Avatar alt={user.username} src={user.avatar} /><Link to={`../users/${user.id}`}>{user.username}</Link></span>\n                              </TableCell>\n                              <TableCell><ControlPointIcon />Activity points: {Math.abs(user.memes.length * 3) + getLikes(user) + getComments(user)}</TableCell>\n                              <TableCell><ImageIcon />posts: {user.memes.length}</TableCell>\n                              <TableCell><ThumbUpIcon />likes received: {getLikes(user)}</TableCell>\n                              <TableCell><CommentIcon />comments posted: {getComments(user)}</TableCell>\n                              <TableCell><CalendarTodayIcon /> joined in {user.joined}</TableCell>\n                            </TableRow>\n                          )\n                          : null\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Route>\n            </Switch>\n          </Box>\n        </Router>\n      </Container>\n    </ThemeProvider>\n  )\n}\n\n\nexport default App\n","import userService from '../services/users'\n\nconst userReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'INIT_USERS':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await userService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users,\n    })\n  }\n}\n\nexport default userReducer","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport memeReducer, { initializeMemes } from './reducers/memeReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport userReducer, { initializeUsers } from './reducers/userReducer'\nimport loggedReducer from './reducers/loggedReducer'\nimport memeService from './services/memes'\nimport userService from './services/users'\n\nconst combinedReducer = combineReducers({\n  users: userReducer,\n  memes: memeReducer,\n  notification: notificationReducer,\n  loggedIn: loggedReducer\n})\n\nconst store = createStore(\n  combinedReducer,\n  composeWithDevTools(applyMiddleware(thunk)\n  ))\n\nmemeService.getAll().then(memes =>\n  store.dispatch(initializeMemes(memes))\n)\n\nuserService.getAll().then(users =>\n  store.dispatch(initializeUsers(users))\n)\n\nstore.subscribe(() => console.log('store: ' , store.getState()))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}